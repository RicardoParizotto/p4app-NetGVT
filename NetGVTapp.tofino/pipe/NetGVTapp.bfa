version:
  version: 1.0.1
  run_id: "b006aeaed7554163"
  target: Tofino
phv ingress:
  ig_intr_md.resubmit_flag: W12(31)
  ig_md.resub_hdr.iterator: W10
  ig_md.resub_hdr.min_value: W11
  hdr.ethernet.dst_addr.0-31: W6
  hdr.ethernet.dst_addr.32-47: H3
  hdr.ethernet.src_addr.0-31: W5
  hdr.ethernet.src_addr.32-47: H2
  hdr.ethernet.ether_type: TH0
  hdr.ipv4.version: TW0(28..31)
  hdr.ipv4.ihl: TW0(24..27)
  hdr.ipv4.diffserv: TW0(16..23)
  hdr.ipv4.total_len: TW0(0..15)
  hdr.ipv4.identification: TW1(16..31)
  hdr.ipv4.flags: TW1(13..15)
  hdr.ipv4.frag_offset: TW1(0..12)
  hdr.ipv4.ttl: B0
  hdr.ipv4.protocol: TB0
  hdr.ipv4.hdr_checksum: TH1
  hdr.ipv4.src_addr: TW2
  hdr.ipv4.dst_addr: W4
  hdr.gvt.type: W9
  hdr.gvt.pid: W8
  hdr.gvt.value: W4
  hdr.gvt.chunk: W7
  ig_md.iterator_0: W0
  ig_md.iterator_1: W1
  ig_md.gvt: W3
  aux_min_0: W2
  ig_intr_md_for_dprsr.drop_ctl: B2(0..2)
  ig_intr_md_for_dprsr.resubmit_type: B1(0..2)
  ig_intr_md_for_tm.ucast_egress_port: H1(0..8)
  ig_intr_md_for_tm.bypass_egress: B2(3)
  ig_intr_md_for_tm.mcast_grp_a: H0
  hdr.ethernet.$valid: B3(0)
  hdr.ipv4.$valid: B3(1)
  hdr.gvt.$valid: B3(2)
  LVT_chunk_0$index: W12(0..9)
phv egress:
parser ingress:
  start: $entry_point
  init_zero: [ W0, W1, W3, W2, B2, B3 ]
  bitwise_or: [ B3 ]
  hdr_len_adj: 16
  states:
    $entry_point:
      *:
        load: { byte1 : 0 }
        buf_req: 1
        next: start
    start:
      match: [ byte1 ]
      0b1*******:
        0..3: W12  # bit[0] -> W12 bit[31]: ingress::ig_intr_md.resubmit_flag
        shift: 8
        buf_req: 8
        next: TofinoIngressParser_parse_resubmit
      0b0*******:
        0..3: W12  # bit[0] -> W12 bit[31]: ingress::ig_intr_md.resubmit_flag
        shift: 8
        buf_req: 8
        next: TofinoIngressParser_parse_port_metadata
    TofinoIngressParser_parse_resubmit:
      *:
        0..3: W10  # ingress::ig_md.resub_hdr.iterator
        4..7: W11  # ingress::ig_md.resub_hdr.min_value
        load: { half : 20..21 }
        shift: 8
        buf_req: 22
        next: start_0
    start_0:
      match: [ half ]
      0x0800:
        0..1: H3  # ingress::hdr.ethernet.dst_addr[47:32].32-47
        2..5: W6  # ingress::hdr.ethernet.dst_addr[31:0].0-31
        6..7: H2  # ingress::hdr.ethernet.src_addr[47:32].32-47
        8..11: W5  # ingress::hdr.ethernet.src_addr[31:0].0-31
        12..13: TH0  # ingress::hdr.ethernet.ether_type
        B3: 1  # value 1 -> B3 bit[0]: ingress::hdr.ethernet.$valid
        shift: 14
        buf_req: 14
        next: parse_ipv4
      0x8666:
        0..1: H3  # ingress::hdr.ethernet.dst_addr[47:32].32-47
        2..5: W6  # ingress::hdr.ethernet.dst_addr[31:0].0-31
        6..7: H2  # ingress::hdr.ethernet.src_addr[47:32].32-47
        8..11: W5  # ingress::hdr.ethernet.src_addr[31:0].0-31
        12..13: TH0  # ingress::hdr.ethernet.ether_type
        B3: 1  # value 1 -> B3 bit[0]: ingress::hdr.ethernet.$valid
        shift: 14
        buf_req: 14
        next: parse_gvt
      0x****:
        0..1: H3  # ingress::hdr.ethernet.dst_addr[47:32].32-47
        2..5: W6  # ingress::hdr.ethernet.dst_addr[31:0].0-31
        6..7: H2  # ingress::hdr.ethernet.src_addr[47:32].32-47
        8..11: W5  # ingress::hdr.ethernet.src_addr[31:0].0-31
        12..13: TH0  # ingress::hdr.ethernet.ether_type
        B3: 1  # value 1 -> B3 bit[0]: ingress::hdr.ethernet.$valid
        shift: 14
        buf_req: 14
        next: end
    parse_ipv4:
      *:
        0..3: TW0
            # - bit[0..3] -> TW0 bit[31..28]: ingress::hdr.ipv4.version
            # - bit[4..7] -> TW0 bit[27..24]: ingress::hdr.ipv4.ihl
            # - bit[8..15] -> TW0 bit[23..16]: ingress::hdr.ipv4.diffserv
            # - bit[16..31] -> TW0 bit[15..0]: ingress::hdr.ipv4.total_len
        4..7: TW1
            # - bit[32..47] -> TW1 bit[31..16]: ingress::hdr.ipv4.identification
            # - bit[48..50] -> TW1 bit[15..13]: ingress::hdr.ipv4.flags
            # - bit[51..63] -> TW1 bit[12..0]: ingress::hdr.ipv4.frag_offset
        8: B0  # ingress::hdr.ipv4.ttl
        9: TB0  # ingress::hdr.ipv4.protocol
        10..11: TH1  # ingress::hdr.ipv4.hdr_checksum
        12..15: TW2  # ingress::hdr.ipv4.src_addr
        16..19: W4  # ingress::hdr.ipv4.dst_addr
        B3: 2  # value 1 -> B3 bit[1]: ingress::hdr.ipv4.$valid
        shift: 20
        buf_req: 20
        next: end
    parse_gvt:
      *:
        0..3: W9  # ingress::hdr.gvt.type
        4..7: W8  # ingress::hdr.gvt.pid
        8..11: W4  # ingress::hdr.gvt.value
        12..15: W7  # ingress::hdr.gvt.chunk
        B3: 4  # value 1 -> B3 bit[2]: ingress::hdr.gvt.$valid
        shift: 16
        buf_req: 16
        next: end
    TofinoIngressParser_parse_port_metadata:
      *:
        load: { half : 20..21 }
        shift: 8
        buf_req: 22
        next: start_0
deparser ingress:
  dictionary:
    H3: B3(0)  # ingress::hdr.ethernet.dst_addr.32-47 if ingress::hdr.ethernet.$valid
    W6: B3(0)  # ingress::hdr.ethernet.dst_addr.0-31 if ingress::hdr.ethernet.$valid
    H2: B3(0)  # ingress::hdr.ethernet.src_addr.32-47 if ingress::hdr.ethernet.$valid
    W5: B3(0)  # ingress::hdr.ethernet.src_addr.0-31 if ingress::hdr.ethernet.$valid
    TH0: B3(0)  # ingress::hdr.ethernet.ether_type if ingress::hdr.ethernet.$valid
    TW0: B3(1)
        # - bit[31..28]: ingress::hdr.ipv4.version if ingress::hdr.ipv4.$valid
        # - bit[27..24]: ingress::hdr.ipv4.ihl if ingress::hdr.ipv4.$valid
        # - bit[23..16]: ingress::hdr.ipv4.diffserv if ingress::hdr.ipv4.$valid
        # - bit[15..0]: ingress::hdr.ipv4.total_len if ingress::hdr.ipv4.$valid
    TW1: B3(1)
        # - bit[31..16]: ingress::hdr.ipv4.identification if ingress::hdr.ipv4.$valid
        # - bit[15..13]: ingress::hdr.ipv4.flags if ingress::hdr.ipv4.$valid
        # - bit[12..0]: ingress::hdr.ipv4.frag_offset if ingress::hdr.ipv4.$valid
    B0: B3(1)  # ingress::hdr.ipv4.ttl if ingress::hdr.ipv4.$valid
    TB0: B3(1)  # ingress::hdr.ipv4.protocol if ingress::hdr.ipv4.$valid
    full_checksum 0: B3(1)  # ingress::hdr.ipv4.$valid
    TW2: B3(1)  # ingress::hdr.ipv4.src_addr if ingress::hdr.ipv4.$valid
    W4: B3(1)  # ingress::hdr.ipv4.dst_addr if ingress::hdr.ipv4.$valid
    W9: B3(2)  # ingress::hdr.gvt.type if ingress::hdr.gvt.$valid
    W8: B3(2)  # ingress::hdr.gvt.pid if ingress::hdr.gvt.$valid
    W4: B3(2)  # ingress::hdr.gvt.value if ingress::hdr.gvt.$valid
    W7: B3(2)  # ingress::hdr.gvt.chunk if ingress::hdr.gvt.$valid
  partial_checksum 0: 
    - TW0: { }
        # - bit[31..28]: ingress::hdr.ipv4.version
        # - bit[27..24]: ingress::hdr.ipv4.ihl
        # - bit[23..16]: ingress::hdr.ipv4.diffserv
        # - bit[15..0]: ingress::hdr.ipv4.total_len
    - TW1: { }
        # - bit[31..16]: ingress::hdr.ipv4.identification
        # - bit[15..13]: ingress::hdr.ipv4.flags
        # - bit[12..0]: ingress::hdr.ipv4.frag_offset
    - B0: { swap: 1 }  # ingress::hdr.ipv4.ttl
    - TB0: { }  # ingress::hdr.ipv4.protocol
    - TW2: { }  # ingress::hdr.ipv4.src_addr
    - W4: { }  # ingress::hdr.ipv4.dst_addr
  full_checksum 0: 
    - partial_checksum 0: { }
  egress_unicast_port: H1(0..8)  # bit[8..0]: ingress::ig_intr_md_for_tm.ucast_egress_port
  bypss_egr: B2(3..3)  # bit[3]: ingress::ig_intr_md_for_tm.bypass_egress
  drop_ctl: B2(0..2)  # bit[2..0]: ingress::ig_intr_md_for_dprsr.drop_ctl
  egress_multicast_group_0:
    - H0  # ingress::ig_intr_md_for_tm.mcast_grp_a
  resubmit:
    select: B1(0..2)  # bit[2..0]: ingress::ig_intr_md_for_dprsr.resubmit_type
    1:
      - W10  # ingress::ig_md.resub_hdr.iterator
      - W11  # ingress::ig_md.resub_hdr.min_value
parser egress:
  start: $entry_point.start
  hdr_len_adj: 0
  meta_opt: 0
  states:
    $entry_point.start:
      *:
        buf_req: 0
        next: end
deparser egress:
  dictionary: {}
stage 0 ingress:
  phase0_match SwitchIngressParser.$PORT_METADATA:
    p4:
      name: SwitchIngressParser.$PORT_METADATA
      size: 288
      preferred_match_type: exact
      match_type: exact
    size: 288
    p4_param_order:
      ig_intr_md.ingress_port: { type: exact, size: 9 }
    format: {ig_intr_md: 0..63}
    constant_value: 0
    actions:
      set_port_metadata:
      - handle: 0x20000000
      - p4_param_order: { ig_intr_md: 64 } 
  ternary_match tbl_NetGVTapp391 0:
    p4: { name: tbl_NetGVTapp391, hidden: true }
    hit: [  cond-6 ]
    miss:  cond-6
    indirect: tbl_NetGVTapp391$tind
  ternary_indirect tbl_NetGVTapp391$tind:
    row: 2
    bus: 1
    format: { action: 0..0 }
    instruction: tbl_NetGVTapp391$tind(action, $DEFAULT)
    actions:
      NetGVTapp391(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000001a
      - next_table: 0
      - set ig_intr_md_for_tm.bypass_egress, 1
    default_action: NetGVTapp391
  gateway cond-6 1:
    name: cond-6
    input_xbar:
      exact group 0: { 2: hdr.gvt.$valid }
    row: 1
    bus: 1
    unit: 1
    match: { 2: hdr.gvt.$valid }
    0b*****1:  tbl_NetGVTapp350
    miss:  ipv4_lpm_0
    condition: 
      expression: "(hdr.gvt.$valid == 1)"
      true:  tbl_NetGVTapp350
      false:  ipv4_lpm_0
  ternary_match tbl_NetGVTapp350 2:
    p4: { name: tbl_NetGVTapp350, hidden: true }
    gateway:
      name: cond-7
      input_xbar:
        exact group 0: { 8: hdr.gvt.chunk(8..31), 32: hdr.gvt.chunk(0..7) }
      row: 1
      bus: 0
      unit: 0
      match: { 0: hdr.gvt.chunk(0..7), 8: hdr.gvt.chunk(8..15), 16: hdr.gvt.chunk(16..23), 24: hdr.gvt.chunk(24..31) }
      0x00000000: run_table
      miss:  tbl_NetGVTapp364
      condition: 
        expression: "(hdr.gvt.chunk == 0)"
        true:  tbl_NetGVTapp350
        false:  tbl_NetGVTapp364
    hit: [  tbl_NetGVTapp349 ]
    miss:  tbl_NetGVTapp349
    indirect: tbl_NetGVTapp350$tind
  stateful tbl_NetGVTapp350$salu.LVT_pid_1:
    p4: { name: LVT_pid_1, size: 1 }
    row: 3
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 3
    input_xbar:
      exact group 0: { 64: hdr.gvt.pid, 96: hdr.gvt.value }
    format: { lo: 32 }
    actions:
      Update_lvt_pid_15:
      - equ lo, phv_lo, -1
      - alu_a cmplo, lo, phv_hi
      - output alu_lo
  ternary_indirect tbl_NetGVTapp350$tind:
    row: 2
    bus: 0
    format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11, meter_type: 12..14 }
    action_bus: { 96..99 : tbl_NetGVTapp350$salu.LVT_pid_1(0..31) }
    stateful: tbl_NetGVTapp350$salu.LVT_pid_1(meter_addr, meter_pfe, meter_type)
    instruction: tbl_NetGVTapp350$tind(action, $DEFAULT)
    actions:
      NetGVTapp350(1, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000002
      - next_table: 0
      - set ig_md.iterator_1, tbl_NetGVTapp350$salu.LVT_pid_1
      - tbl_NetGVTapp350$salu.LVT_pid_1(Update_lvt_pid_15, 0)
    default_action: NetGVTapp350
  ternary_match tbl_NetGVTapp364 4:
    p4: { name: tbl_NetGVTapp364, hidden: true }
    gateway:
      name: cond-8
      input_xbar:
        exact group 0: { 8: hdr.gvt.chunk(8..31), 32: hdr.gvt.chunk(0..7) }
      row: 0
      bus: 1
      unit: 1
      match: { 0: hdr.gvt.chunk(0..7), 8: hdr.gvt.chunk(8..15), 16: hdr.gvt.chunk(16..23), 24: hdr.gvt.chunk(24..31) }
      0x00000001: run_table
      miss:  tbl_NetGVTapp379
      condition: 
        expression: "(hdr.gvt.chunk == 1)"
        true:  tbl_NetGVTapp364
        false:  tbl_NetGVTapp379
    hit: [  tbl_NetGVTapp365 ]
    miss:  tbl_NetGVTapp365
    indirect: tbl_NetGVTapp364$tind
  stateful tbl_NetGVTapp364$salu.LVT_pid_6:
    p4: { name: LVT_pid_6, size: 1 }
    row: 11
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 11
    input_xbar:
      exact group 2: { 64: hdr.gvt.pid, 96: hdr.gvt.value }
    format: { lo: 32 }
    actions:
      Update_lvt_pid_20:
      - equ lo, phv_lo, -6
      - alu_a cmplo, lo, phv_hi
      - output alu_lo
  ternary_indirect tbl_NetGVTapp364$tind:
    row: 1
    bus: 0
    format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11, meter_type: 12..14 }
    action_bus: { 112..115 : tbl_NetGVTapp364$salu.LVT_pid_6(0..31) }
    stateful: tbl_NetGVTapp364$salu.LVT_pid_6(meter_addr, meter_pfe, meter_type)
    instruction: tbl_NetGVTapp364$tind(action, $DEFAULT)
    actions:
      NetGVTapp364(1, 4):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000009
      - next_table: 0
      - set ig_md.iterator_1, tbl_NetGVTapp364$salu.LVT_pid_6
      - tbl_NetGVTapp364$salu.LVT_pid_6(Update_lvt_pid_20, 0)
    default_action: NetGVTapp364
  ternary_match tbl_NetGVTapp379 5:
    p4: { name: tbl_NetGVTapp379, hidden: true }
    gateway:
      name: cond-9
      input_xbar:
        exact group 0: { 63: ig_intr_md.resubmit_flag }
      row: 0
      bus: 0
      unit: 0
      match: { 7: ig_intr_md.resubmit_flag }
      0x1: run_table
      miss:  ipv4_lpm_0
      condition: 
        expression: "(ig_intr_md.resubmit_flag == 1)"
        true:  tbl_NetGVTapp379
        false:  ipv4_lpm_0
    hit: [  eth_forward_0 ]
    miss:  eth_forward_0
    indirect: tbl_NetGVTapp379$tind
  stateful tbl_NetGVTapp379$salu.LVT_chunk_1:
    p4: { name: LVT_chunk_1, size: 1 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    format: { lo: 32 }
    actions:
      read_chunk_2:
      - output mem_lo
  ternary_indirect tbl_NetGVTapp379$tind:
    row: 0
    bus: 1
    format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11, meter_type: 12..14 }
    action_bus: { 120..123 : tbl_NetGVTapp379$salu.LVT_chunk_1(0..31) }
    stateful: tbl_NetGVTapp379$salu.LVT_chunk_1(meter_addr, meter_pfe, meter_type)
    instruction: tbl_NetGVTapp379$tind(action, $DEFAULT)
    actions:
      NetGVTapp379(1, 5):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000011
      - next_table: 0
      - set ig_md.iterator_0, tbl_NetGVTapp379$salu.LVT_chunk_1
      - tbl_NetGVTapp379$salu.LVT_chunk_1(read_chunk_2, 0)
    default_action: NetGVTapp379
  exact_match eth_forward_0 6:
    p4: { name: SwitchIngress.eth_forward, size: 1024 }
    p4_param_order: 
      hdr.ethernet.src_addr: { type: exact, size: 48, full_size: 48 }
    row: 7
    bus: 0
    column: [ 2, 3, 4, 5 ]
    stash: 
      row: [ 7 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [0, 0, 0x0, [7, 2]]
      - [0, 1, 0x0, [7, 3]]
      - [0, 2, 0x0, [7, 4]]
      - [0, 3, 0x0, [7, 5]]
    input_xbar:
      exact group 1: { 0: hdr.ethernet.src_addr.0-31, 32: hdr.ethernet.src_addr.32-47 }
      hash 2:
        0..7: random(hdr.ethernet.src_addr.0-31, hdr.ethernet.src_addr.32-47(10..15)) ^ hdr.ethernet.src_addr.32-47(0..7)
        8..9: random(hdr.ethernet.src_addr.0-31, hdr.ethernet.src_addr.32-47(10..15)) ^ hdr.ethernet.src_addr.32-47(8..9)
        11..18: random(hdr.ethernet.src_addr.0-31, hdr.ethernet.src_addr.32-47(10..15)) ^ hdr.ethernet.src_addr.32-47(0..7)
        19: random(hdr.ethernet.src_addr.0-31, hdr.ethernet.src_addr.32-47(10..15)) ^ hdr.ethernet.src_addr.32-47(8)
        10: random(hdr.ethernet.src_addr.0-31, hdr.ethernet.src_addr.32-47(10..15)) ^ hdr.ethernet.src_addr.32-47(9)
        22..29: random(hdr.ethernet.src_addr.0-31, hdr.ethernet.src_addr.32-47(10..15)) ^ hdr.ethernet.src_addr.32-47(0..7)
        20..21: random(hdr.ethernet.src_addr.0-31, hdr.ethernet.src_addr.32-47(10..15)) ^ hdr.ethernet.src_addr.32-47(8..9)
        33..39: random(hdr.ethernet.src_addr.0-31, hdr.ethernet.src_addr.32-47(10..15)) ^ hdr.ethernet.src_addr.32-47(0..6)
        30: random(hdr.ethernet.src_addr.0-31, hdr.ethernet.src_addr.32-47(10..15)) ^ hdr.ethernet.src_addr.32-47(7)
        31..32: random(hdr.ethernet.src_addr.0-31, hdr.ethernet.src_addr.32-47(10..15)) ^ hdr.ethernet.src_addr.32-47(8..9)
      hash group 0:
        table: [2]
        seed: 0x4635c89d75
    format: { immediate(0): 0..31, version(0): 112..115, match(0): [66..71, 32..63 ] }
    match: [ hdr.ethernet.src_addr.32-47(10..15), hdr.ethernet.src_addr.0-31(0..7), hdr.ethernet.src_addr.0-31(8..15), hdr.ethernet.src_addr.0-31(16..23), hdr.ethernet.src_addr.0-31(24..31) ]
    match_group_map: [ [ 0 ] ]
    hit: [  tbl_NetGVTapp385 ]
    miss:  tbl_NetGVTapp385
    action_bus: { 64..65 : immediate(0..15), 66..67 : immediate(16..31) }
    action: eth_forward_0$action_data($DIRECT, $DEFAULT)
    instruction: eth_forward_0($DEFAULT, $DEFAULT)
    actions:
      SwitchIngress.gvt_forward(0, 6):
      - p4_param_order: { port: 9, dst_mac: 48 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000015
      - next_table: 0
      - { dst_mac.0-31: $adf_f0(0..31), port: immediate(0..8), dst_mac.32-47: immediate(16..31) }
      - set ig_intr_md_for_tm.ucast_egress_port, port
      - set hdr.ethernet.dst_addr.0-31, dst_mac.0-31
      - set hdr.ethernet.dst_addr.32-47, dst_mac.32-47
      NoAction(-1, 0):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000016
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action eth_forward_0$action_data:
    p4: { name: SwitchIngress.eth_forward$action }
    row: 13
    logical_bus: A
    column: 0
    vpns: [ 0 ]
    home_row:
    - 13
    format SwitchIngress.gvt_forward: { $adf_f0: 0..31 }
    action_bus: { 72..75 : $adf_f0 }
  ternary_match tbl_NetGVTapp385 7:
    p4: { name: tbl_NetGVTapp385, hidden: true }
    hit: [  tbl_NetGVTapp378 ]
    miss:  tbl_NetGVTapp378
    indirect: tbl_NetGVTapp385$tind
  ternary_indirect tbl_NetGVTapp385$tind:
    row: 0
    bus: 0
    format: { action: 0..0 }
    instruction: tbl_NetGVTapp385$tind(action, $DEFAULT)
    actions:
      NetGVTapp385(0, 7):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000017
      - next_table: 0
      - set ig_intr_md_for_tm.mcast_grp_a, 1
    default_action: NetGVTapp385
  ternary_match tbl_NetGVTapp349 3:
    p4: { name: tbl_NetGVTapp349, hidden: true }
    hit: [  tbl_NetGVTapp351 ]
    miss:  tbl_NetGVTapp351
    indirect: tbl_NetGVTapp349$tind
  stateful tbl_NetGVTapp349$salu.LVT_pid_0:
    p4: { name: LVT_pid_0, size: 1 }
    row: 7
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 7
    input_xbar:
      exact group 1: { 64: hdr.gvt.pid, 96: hdr.gvt.value }
    format: { lo: 32 }
    actions:
      Update_lvt_pid:
      - equ lo, phv_lo
      - alu_a cmplo, lo, phv_hi
      - output alu_lo
  ternary_indirect tbl_NetGVTapp349$tind:
    row: 1
    bus: 1
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 104..107 : tbl_NetGVTapp349$salu.LVT_pid_0(0..31) }
    stateful: tbl_NetGVTapp349$salu.LVT_pid_0(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp349$tind(action, $DEFAULT)
    actions:
      NetGVTapp349(0, 3):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000001
      - next_table: 0
      - set ig_md.iterator_0, tbl_NetGVTapp349$salu.LVT_pid_0
      - tbl_NetGVTapp349$salu.LVT_pid_0(Update_lvt_pid, 0)
    default_action: NetGVTapp349
stage 1 ingress:
  dependency: action
  ternary_match tbl_NetGVTapp365 0:
    p4: { name: tbl_NetGVTapp365, hidden: true }
    hit: [  tbl_NetGVTapp367 ]
    miss:  tbl_NetGVTapp367
    indirect: tbl_NetGVTapp365$tind
  stateful tbl_NetGVTapp365$salu.LVT_pid_7:
    p4: { name: LVT_pid_7, size: 1 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    input_xbar:
      exact group 0: { 64: hdr.gvt.pid, 96: hdr.gvt.value }
    format: { lo: 32 }
    actions:
      Update_lvt_pid_21:
      - equ lo, phv_lo, -7
      - alu_a cmplo, lo, phv_hi
      - output alu_lo
  ternary_indirect tbl_NetGVTapp365$tind:
    row: 0
    bus: 0
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 96..99 : tbl_NetGVTapp365$salu.LVT_pid_7(0..31) }
    stateful: tbl_NetGVTapp365$salu.LVT_pid_7(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp365$tind(action, $DEFAULT)
    actions:
      NetGVTapp365(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000000a
      - next_table: 0
      - minu aux_min_0, ig_md.iterator_0, ig_md.iterator_1
      - set ig_md.iterator_1, tbl_NetGVTapp365$salu.LVT_pid_7
      - tbl_NetGVTapp365$salu.LVT_pid_7(Update_lvt_pid_21, 0)
    default_action: NetGVTapp365
  ternary_match tbl_NetGVTapp351 1:
    p4: { name: tbl_NetGVTapp351, hidden: true }
    hit: [  tbl_NetGVTapp353 ]
    miss:  tbl_NetGVTapp353
    indirect: tbl_NetGVTapp351$tind
  stateful tbl_NetGVTapp351$salu.LVT_pid_2:
    p4: { name: LVT_pid_2, size: 1 }
    row: 11
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 11
    input_xbar:
      exact group 1: { 64: hdr.gvt.pid, 96: hdr.gvt.value }
    format: { lo: 32 }
    actions:
      Update_lvt_pid_16:
      - equ lo, phv_lo, -2
      - alu_a cmplo, lo, phv_hi
      - output alu_lo
  ternary_indirect tbl_NetGVTapp351$tind:
    row: 0
    bus: 1
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 104..107 : tbl_NetGVTapp351$salu.LVT_pid_2(0..31) }
    stateful: tbl_NetGVTapp351$salu.LVT_pid_2(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp351$tind(action, $DEFAULT)
    actions:
      NetGVTapp351(0, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000003
      - next_table: 0
      - minu aux_min_0, ig_md.iterator_0, ig_md.iterator_1
      - set ig_md.iterator_1, tbl_NetGVTapp351$salu.LVT_pid_2
      - tbl_NetGVTapp351$salu.LVT_pid_2(Update_lvt_pid_16, 0)
    default_action: NetGVTapp351
stage 2 ingress:
  dependency: action
  ternary_match tbl_NetGVTapp367 0:
    p4: { name: tbl_NetGVTapp367, hidden: true }
    hit: [  tbl_NetGVTapp369 ]
    miss:  tbl_NetGVTapp369
    indirect: tbl_NetGVTapp367$tind
  stateful tbl_NetGVTapp367$salu.LVT_pid_8:
    p4: { name: LVT_pid_8, size: 1 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    input_xbar:
      exact group 0: { 64: hdr.gvt.pid, 96: hdr.gvt.value }
    format: { lo: 32 }
    actions:
      Update_lvt_pid_22:
      - equ lo, phv_lo, -8
      - alu_a cmplo, lo, phv_hi
      - output alu_lo
  ternary_indirect tbl_NetGVTapp367$tind:
    row: 0
    bus: 0
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 96..99 : tbl_NetGVTapp367$salu.LVT_pid_8(0..31) }
    stateful: tbl_NetGVTapp367$salu.LVT_pid_8(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp367$tind(action, $DEFAULT)
    actions:
      NetGVTapp367(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000000b
      - next_table: 0
      - minu aux_min_0, aux_min_0, ig_md.iterator_1
      - set ig_md.iterator_1, tbl_NetGVTapp367$salu.LVT_pid_8
      - tbl_NetGVTapp367$salu.LVT_pid_8(Update_lvt_pid_22, 0)
    default_action: NetGVTapp367
  ternary_match tbl_NetGVTapp353 1:
    p4: { name: tbl_NetGVTapp353, hidden: true }
    hit: [  tbl_NetGVTapp355 ]
    miss:  tbl_NetGVTapp355
    indirect: tbl_NetGVTapp353$tind
  stateful tbl_NetGVTapp353$salu.LVT_pid_3:
    p4: { name: LVT_pid_3, size: 1 }
    row: 11
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 11
    input_xbar:
      exact group 1: { 64: hdr.gvt.pid, 96: hdr.gvt.value }
    format: { lo: 32 }
    actions:
      Update_lvt_pid_17:
      - equ lo, phv_lo, -3
      - alu_a cmplo, lo, phv_hi
      - output alu_lo
  ternary_indirect tbl_NetGVTapp353$tind:
    row: 0
    bus: 1
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 104..107 : tbl_NetGVTapp353$salu.LVT_pid_3(0..31) }
    stateful: tbl_NetGVTapp353$salu.LVT_pid_3(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp353$tind(action, $DEFAULT)
    actions:
      NetGVTapp353(0, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000004
      - next_table: 0
      - minu aux_min_0, aux_min_0, ig_md.iterator_1
      - set ig_md.iterator_1, tbl_NetGVTapp353$salu.LVT_pid_3
      - tbl_NetGVTapp353$salu.LVT_pid_3(Update_lvt_pid_17, 0)
    default_action: NetGVTapp353
stage 3 ingress:
  dependency: action
  ternary_match tbl_NetGVTapp378 0:
    p4: { name: tbl_NetGVTapp378, hidden: true }
    hit: [  tbl_NetGVTapp378$st1 ]
    miss:  tbl_NetGVTapp378$st1
    indirect: tbl_NetGVTapp378$tind
  ternary_indirect tbl_NetGVTapp378$tind:
    row: 0
    bus: 1
    format: { action: 0..0, meter_addr: 1..10 }
    instruction: tbl_NetGVTapp378$tind(action, $DEFAULT)
    actions:
      NetGVTapp378(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000010
      - next_table: 0
      - set LVT_chunk_0$index, 0
    default_action: NetGVTapp378
  ternary_match tbl_NetGVTapp369 1:
    p4: { name: tbl_NetGVTapp369, hidden: true }
    hit: [  tbl_NetGVTapp371 ]
    miss:  tbl_NetGVTapp371
    indirect: tbl_NetGVTapp369$tind
  stateful tbl_NetGVTapp369$salu.LVT_pid_9:
    p4: { name: LVT_pid_9, size: 1 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    input_xbar:
      exact group 1: { 64: hdr.gvt.pid, 96: hdr.gvt.value }
    format: { lo: 32 }
    actions:
      Update_lvt_pid_23:
      - equ lo, phv_lo, -9
      - alu_a cmplo, lo, phv_hi
      - output alu_lo
  ternary_indirect tbl_NetGVTapp369$tind:
    row: 0
    bus: 0
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 96..99 : tbl_NetGVTapp369$salu.LVT_pid_9(0..31) }
    stateful: tbl_NetGVTapp369$salu.LVT_pid_9(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp369$tind(action, $DEFAULT)
    actions:
      NetGVTapp369(0, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000000c
      - next_table: 0
      - minu aux_min_0, aux_min_0, ig_md.iterator_1
      - set ig_md.iterator_1, tbl_NetGVTapp369$salu.LVT_pid_9
      - tbl_NetGVTapp369$salu.LVT_pid_9(Update_lvt_pid_23, 0)
    default_action: NetGVTapp369
  ternary_match tbl_NetGVTapp355 2:
    p4: { name: tbl_NetGVTapp355, hidden: true }
    hit: [  tbl_NetGVTapp357 ]
    miss:  tbl_NetGVTapp357
    indirect: tbl_NetGVTapp355$tind
  stateful tbl_NetGVTapp355$salu.LVT_pid_4:
    p4: { name: LVT_pid_4, size: 1 }
    row: 11
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 11
    input_xbar:
      exact group 2: { 64: hdr.gvt.pid, 96: hdr.gvt.value }
    format: { lo: 32 }
    actions:
      Update_lvt_pid_18:
      - equ lo, phv_lo, -4
      - alu_a cmplo, lo, phv_hi
      - output alu_lo
  ternary_indirect tbl_NetGVTapp355$tind:
    row: 1
    bus: 0
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 104..107 : tbl_NetGVTapp355$salu.LVT_pid_4(0..31) }
    stateful: tbl_NetGVTapp355$salu.LVT_pid_4(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp355$tind(action, $DEFAULT)
    actions:
      NetGVTapp355(0, 4):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000005
      - next_table: 0
      - minu aux_min_0, aux_min_0, ig_md.iterator_1
      - set ig_md.iterator_1, tbl_NetGVTapp355$salu.LVT_pid_4
      - tbl_NetGVTapp355$salu.LVT_pid_4(Update_lvt_pid_18, 0)
    default_action: NetGVTapp355
stage 4 ingress:
  dependency: action
  ternary_match tbl_NetGVTapp371 0:
    p4: { name: tbl_NetGVTapp371, hidden: true }
    hit: [  tbl_NetGVTapp373 ]
    miss:  tbl_NetGVTapp373
    indirect: tbl_NetGVTapp371$tind
  stateful tbl_NetGVTapp371$salu.LVT_pid_10:
    p4: { name: LVT_pid_10, size: 1 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    input_xbar:
      exact group 0: { 64: hdr.gvt.pid, 96: hdr.gvt.value }
    format: { lo: 32 }
    actions:
      Update_lvt_pid_24:
      - equ lo, phv_lo, -10
      - alu_a cmplo, lo, phv_hi
      - output alu_lo
  ternary_indirect tbl_NetGVTapp371$tind:
    row: 0
    bus: 0
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 96..99 : tbl_NetGVTapp371$salu.LVT_pid_10(0..31) }
    stateful: tbl_NetGVTapp371$salu.LVT_pid_10(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp371$tind(action, $DEFAULT)
    actions:
      NetGVTapp371(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000000d
      - next_table: 0
      - minu aux_min_0, aux_min_0, ig_md.iterator_1
      - set ig_md.iterator_1, tbl_NetGVTapp371$salu.LVT_pid_10
      - tbl_NetGVTapp371$salu.LVT_pid_10(Update_lvt_pid_24, 0)
    default_action: NetGVTapp371
  ternary_match tbl_NetGVTapp357 1:
    p4: { name: tbl_NetGVTapp357, hidden: true }
    hit: [  tbl_NetGVTapp359 ]
    miss:  tbl_NetGVTapp359
    indirect: tbl_NetGVTapp357$tind
  stateful tbl_NetGVTapp357$salu.LVT_pid_5:
    p4: { name: LVT_pid_5, size: 1 }
    row: 11
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 11
    input_xbar:
      exact group 1: { 64: hdr.gvt.pid, 96: hdr.gvt.value }
    format: { lo: 32 }
    actions:
      Update_lvt_pid_19:
      - equ lo, phv_lo, -5
      - alu_a cmplo, lo, phv_hi
      - output alu_lo
  ternary_indirect tbl_NetGVTapp357$tind:
    row: 0
    bus: 1
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 104..107 : tbl_NetGVTapp357$salu.LVT_pid_5(0..31) }
    stateful: tbl_NetGVTapp357$salu.LVT_pid_5(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp357$tind(action, $DEFAULT)
    actions:
      NetGVTapp357(0, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000006
      - next_table: 0
      - minu aux_min_0, aux_min_0, ig_md.iterator_1
      - set ig_md.iterator_1, tbl_NetGVTapp357$salu.LVT_pid_5
      - tbl_NetGVTapp357$salu.LVT_pid_5(Update_lvt_pid_19, 0)
    default_action: NetGVTapp357
stage 5 ingress:
  dependency: action
  ternary_match tbl_NetGVTapp373 0:
    p4: { name: tbl_NetGVTapp373, hidden: true }
    hit: [  tbl_NetGVTapp374 ]
    miss:  tbl_NetGVTapp374
    indirect: tbl_NetGVTapp373$tind
  ternary_indirect tbl_NetGVTapp373$tind:
    row: 0
    bus: 0
    format: { action: 0..0 }
    instruction: tbl_NetGVTapp373$tind(action, $DEFAULT)
    actions:
      NetGVTapp373(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000000e
      - next_table: 0
      - minu aux_min_0, aux_min_0, ig_md.iterator_1
    default_action: NetGVTapp373
  ternary_match tbl_NetGVTapp359 1:
    p4: { name: tbl_NetGVTapp359, hidden: true }
    hit: [  tbl_NetGVTapp360 ]
    miss:  tbl_NetGVTapp360
    indirect: tbl_NetGVTapp359$tind
  ternary_indirect tbl_NetGVTapp359$tind:
    row: 0
    bus: 1
    format: { action: 0..0 }
    instruction: tbl_NetGVTapp359$tind(action, $DEFAULT)
    actions:
      NetGVTapp359(0, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000007
      - next_table: 0
      - minu aux_min_0, aux_min_0, ig_md.iterator_1
    default_action: NetGVTapp359
stage 6 ingress:
  dependency: match
  hash_action tbl_NetGVTapp378$st1 2:
    row: 0
    result_bus: 0
    hash_dist:
      0: { hash: 0, mask: 0x3ff, shift: 5 }
    input_xbar:
      exact group 0: { 0: LVT_chunk_0$index }
      hash 0:
        0..9: LVT_chunk_0$index
      hash group 0:
        table: [0]
        seed: 0x0
    gateway:
      name: tbl_NetGVTapp378-gateway
      row: 0
      bus: 0
      unit: 0
      0x0:  tbl_NetGVTapp380
      miss:  tbl_NetGVTapp380
      condition: 
        expression: "true(always hit)"
        true:  tbl_NetGVTapp380
        false:  tbl_NetGVTapp380
    next: []
    action_bus: { 96..99 : tbl_NetGVTapp360$salu.LVT_chunk_0(0..31) }
    stateful: tbl_NetGVTapp360$salu.LVT_chunk_0(hash_dist 0, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp378$st1($DEFAULT, $DEFAULT)
    actions:
      NetGVTapp378(1, 3):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, reason: hit_path_only, is_constant: true }
      - handle: 0x20000010
      - next_table: 0
      - set ig_md.iterator_1, tbl_NetGVTapp360$salu.LVT_chunk_0
      - tbl_NetGVTapp360$salu.LVT_chunk_0(read_chunk, $hash_dist)
    default_action: NetGVTapp378
  ternary_match tbl_NetGVTapp374 0:
    p4: { name: tbl_NetGVTapp374, hidden: true }
    hit: [  ipv4_lpm_0 ]
    miss:  ipv4_lpm_0
    indirect: tbl_NetGVTapp374$tind
  ternary_indirect tbl_NetGVTapp374$tind:
    row: 0
    bus: 1
    format: { action: 0..0, meter_addr: 1..10 }
    stateful: tbl_NetGVTapp360$salu.LVT_chunk_0(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp374$tind(action, $DEFAULT)
    actions:
      NetGVTapp374(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000000f
      - next_table: 0
      - set ig_intr_md_for_dprsr.resubmit_type, 1
      - tbl_NetGVTapp360$salu.LVT_chunk_0(Update_chunk, 1)
    default_action: NetGVTapp374
  ternary_match tbl_NetGVTapp360 1:
    p4: { name: tbl_NetGVTapp360, hidden: true }
    hit: [  ipv4_lpm_0 ]
    miss:  ipv4_lpm_0
    indirect: tbl_NetGVTapp360$tind
  stateful tbl_NetGVTapp360$salu.LVT_chunk_0:
    p4: { name: LVT_chunk_0, size: 1 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    input_xbar:
      exact group 0: { 64: aux_min_0 }
    format: { lo: 32 }
    actions:
      Update_chunk:
      - alu_a lo, phv_lo
      - output alu_lo
      read_chunk:
      - output mem_lo
  ternary_indirect tbl_NetGVTapp360$tind:
    row: 0
    bus: 0
    format: { action: 0..0, meter_addr: 1..10 }
    stateful: tbl_NetGVTapp360$salu.LVT_chunk_0(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp360$tind(action, $DEFAULT)
    actions:
      NetGVTapp360(0, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000008
      - next_table: 0
      - set ig_intr_md_for_dprsr.resubmit_type, 1
      - tbl_NetGVTapp360$salu.LVT_chunk_0(Update_chunk, 0)
    default_action: NetGVTapp360
stage 7 ingress:
  dependency: action
  ternary_match tbl_NetGVTapp380 0:
    p4: { name: tbl_NetGVTapp380, hidden: true }
    hit: [  tbl_NetGVTapp381 ]
    miss:  tbl_NetGVTapp381
    indirect: tbl_NetGVTapp380$tind
  ternary_indirect tbl_NetGVTapp380$tind:
    row: 0
    bus: 0
    format: { action: 0..0 }
    instruction: tbl_NetGVTapp380$tind(action, $DEFAULT)
    actions:
      NetGVTapp380(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000012
      - next_table: 0
      - minu aux_min_0, ig_md.iterator_0, ig_md.iterator_1
    default_action: NetGVTapp380
stage 8 ingress:
  dependency: match
  ternary_match tbl_NetGVTapp381 0:
    p4: { name: tbl_NetGVTapp381, hidden: true }
    hit: [  tbl_NetGVTapp382 ]
    miss:  tbl_NetGVTapp382
    indirect: tbl_NetGVTapp381$tind
  stateful tbl_NetGVTapp381$salu.GVT:
    p4: { name: GVT, size: 1 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    input_xbar:
      exact group 0: { 64: aux_min_0 }
    format: { lo: 32 }
    actions:
      Update_GVT_0:
      - alu_a lo, phv_lo
      - output alu_lo
  ternary_indirect tbl_NetGVTapp381$tind:
    row: 0
    bus: 0
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 96..99 : tbl_NetGVTapp381$salu.GVT(0..31) }
    stateful: tbl_NetGVTapp381$salu.GVT(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_NetGVTapp381$tind(action, $DEFAULT)
    actions:
      NetGVTapp381(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000013
      - next_table: 0
      - set ig_md.gvt, tbl_NetGVTapp381$salu.GVT
      - tbl_NetGVTapp381$salu.GVT(Update_GVT_0, 0)
    default_action: NetGVTapp381
stage 9 ingress:
  dependency: action
  ternary_match tbl_NetGVTapp382 0:
    p4: { name: tbl_NetGVTapp382, hidden: true }
    hit: [  ipv4_lpm_0 ]
    miss:  ipv4_lpm_0
    indirect: tbl_NetGVTapp382$tind
  ternary_indirect tbl_NetGVTapp382$tind:
    row: 0
    bus: 0
    format: { action: 0..0 }
    instruction: tbl_NetGVTapp382$tind(action, $DEFAULT)
    actions:
      NetGVTapp382(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000014
      - next_table: 0
      - set hdr.gvt.value, ig_md.gvt
      - set hdr.gvt.type, 0
    default_action: NetGVTapp382
  exact_match ipv4_lpm_0 1:
    p4: { name: SwitchIngress.ipv4_lpm, size: 1024 }
    p4_param_order: 
      hdr.ipv4.dst_addr: { type: exact, size: 32, full_size: 32 }
    row: 7
    bus: 0
    column: [ 2, 3, 4, 5 ]
    stash: 
      row: [ 7 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [0, 0, 0x0, [7, 2]]
      - [0, 1, 0x0, [7, 3]]
      - [0, 2, 0x0, [7, 4]]
      - [0, 3, 0x0, [7, 5]]
    input_xbar:
      exact group 0: { 0: hdr.ipv4.dst_addr }
      hash 0:
        0..7: random(hdr.ipv4.dst_addr(10..31)) ^ hdr.ipv4.dst_addr(0..7)
        8..9: random(hdr.ipv4.dst_addr(10..31)) ^ hdr.ipv4.dst_addr(8..9)
        11..18: random(hdr.ipv4.dst_addr(10..31)) ^ hdr.ipv4.dst_addr(0..7)
        19: random(hdr.ipv4.dst_addr(10..31)) ^ hdr.ipv4.dst_addr(8)
        10: random(hdr.ipv4.dst_addr(10..31)) ^ hdr.ipv4.dst_addr(9)
        22..29: random(hdr.ipv4.dst_addr(10..31)) ^ hdr.ipv4.dst_addr(0..7)
        20..21: random(hdr.ipv4.dst_addr(10..31)) ^ hdr.ipv4.dst_addr(8..9)
        33..39: random(hdr.ipv4.dst_addr(10..31)) ^ hdr.ipv4.dst_addr(0..6)
        30: random(hdr.ipv4.dst_addr(10..31)) ^ hdr.ipv4.dst_addr(7)
        31..32: random(hdr.ipv4.dst_addr(10..31)) ^ hdr.ipv4.dst_addr(8..9)
      hash group 0:
        table: [0]
        seed: 0xc0ecd85a37
    format: { action(0): 0..1, immediate(0): 2..33, version(0): 112..115, match(0): 34..55 }
    match: [ hdr.ipv4.dst_addr(10..15), hdr.ipv4.dst_addr(16..23), hdr.ipv4.dst_addr(24..31) ]
    match_group_map: [ [ 0 ] ]
    gateway:
      name: cond-10
      input_xbar:
        exact group 0: { 33: hdr.ipv4.$valid }
      row: 7
      bus: 0
      unit: 0
      match: { 1: hdr.ipv4.$valid }
      0b******1: run_table
      miss:  END
      condition: 
        expression: "(hdr.ipv4.$valid == 1)"
        true:  ipv4_lpm_0
        false:  END
    hit: [  END ]
    miss:  END
    action_bus: { 64..65 : immediate(0..15), 66..67 : immediate(16..31) }
    action: ipv4_lpm_0$action_data($DIRECT, $DEFAULT)
    instruction: ipv4_lpm_0(action, $DEFAULT)
    actions:
      SwitchIngress.ipv4_forward(1, 2):
      - p4_param_order: { port: 9, dst_mac: 48 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000018
      - next_table: 0
      - { dst_mac.0-31: $adf_f0(0..31), port: immediate(0..8), dst_mac.32-47: immediate(16..31) }
      - set ig_intr_md_for_tm.ucast_egress_port, port
      - set hdr.ethernet.dst_addr.0-31, dst_mac.0-31
      - set hdr.ethernet.dst_addr.32-47, dst_mac.32-47
      - add hdr.ipv4.ttl, hdr.ipv4.ttl, 255
      SwitchIngress.drop_(2, 3):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000019
      - next_table: 0
      - {  }
      - set ig_intr_md_for_dprsr.drop_ctl, 0
    default_action: SwitchIngress.drop_
  action ipv4_lpm_0$action_data:
    p4: { name: SwitchIngress.ipv4_lpm$action }
    row: 15
    logical_bus: A
    column: 0
    vpns: [ 0 ]
    home_row:
    - 15
    format SwitchIngress.ipv4_forward: { $adf_f0: 0..31 }
    action_bus: { 96..99 : $adf_f0 }


primitives: "NetGVTapp.tofino/pipe//NetGVTapp.prim.json"
dynhash: "NetGVTapp.tofino/pipe//NetGVTapp.dynhash.json"
